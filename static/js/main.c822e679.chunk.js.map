{"version":3,"sources":["components/common/InputElement.js","components/EducationSection.js","components/common/TextArea.js","components/PersonalInfoSection.js","components/WorkSection.js","components/common/SelectInput.js","components/ProjectSection.js","components/CVForm.js","components/CVPreview.js","App.js","index.js"],"names":["InputElement","props","useState","fieldValue","setFieldValue","useEffect","setFieldData","name","className","type","id","value","onChange","e","target","required","labelFocused","length","htmlFor","label","EducationSection","educationInfo","setEducationInfo","setEducationalFieldData","fieldName","pEducationalInfo","setFormData","index","TextArea","PersonalInfoSection","personalInfo","setPersonalInfo","setPersonalFieldData","pPersonalInfo","WorkSection","workInfo","setWorkInfo","setWorkFieldData","SelectInput","options","map","optionValue","PROJECT_TYPES","ProjectSection","projectInfo","setprojectInfo","setProjectFieldData","CVForm","setFormFieldData","removeFormFieldData","submitHandler","showCVForm","eductaionList","setEducationList","workList","setWorkList","projectList","setProjectList","onSubmit","onClick","splice","currentDate","Date","dateFormatOptions","month","year","getDateString","dateStr","parsedDate","getMonth","getFullYear","toLocaleDateString","CVPreview","showCVPreview","togglePreview","src","alt","description","firstName","lastName","email","roleOrPosition","phoneNumber","info","companyName","workFrom","workTo","ProjectName","projectType","univName","degOrStream","educationFrom","educationTo","App","formData","hideCVForm","toggleCVForm","pFormData","filter","_data","i","preventDefault","document","querySelector","scrollIntoView","behavior","block","ReactDOM","render","StrictMode","getElementById"],"mappings":"sNAoBeA,MAlBf,SAAsBC,GAAQ,IAAD,IACzB,EAAmCC,mBAAS,IAA5C,mBAAMC,EAAN,KAAkBC,EAAlB,KAYA,OANAC,qBAAU,WACHJ,EAAMK,cACLL,EAAMK,aAAaL,EAAMM,KAAMJ,KAEpC,CAACA,IAEG,sBAAKK,UAAU,aAAf,UAA4B,uBAAOC,KAAMR,EAAMQ,KAAMC,GAAE,UAAET,EAAMS,UAAR,QAAcT,EAAMM,KAAMI,MAAOR,EAAYS,SAVhF,SAACC,GACxBT,EAAcS,EAAEC,OAAOH,QAUvBJ,KAAMN,EAAMM,KAAMC,UAAWP,EAAMO,UAAWO,UAAU,IACxD,uBAAOP,UAAS,yBAAoBP,EAAMe,cAAgBb,EAAWc,OAAS,yBAA2B,IACrGC,QAAO,UAAEjB,EAAMS,UAAR,QAAcT,EAAMM,KAD/B,SACsCN,EAAMkB,YCGrCC,MAlBf,SAA0BnB,GACtB,MAA0CC,mBAAS,IAAnD,mBAAOmB,EAAP,KAAsBC,EAAtB,KACMC,EAA0B,SAACC,EAAWrB,GACxCmB,GAAiB,SAACG,GAEd,OADAA,EAAiBD,GAAarB,EACvBsB,MAMf,OAHApB,qBAAU,WACNJ,EAAMyB,YAAY,gBAAiBL,EAAepB,EAAM0B,SACzD,CAACN,IACG,sBAAKb,UAAU,iBAAf,UACH,cAAC,EAAD,CAAcC,KAAK,OAAOU,MAAM,4BAA4BZ,KAAK,WAAWG,GAAI,YAAcT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAciB,IACjJ,cAAC,EAAD,CAAcd,KAAK,OAAOU,MAAM,mBAAmBZ,KAAK,cAAcG,GAAI,eAAiBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAciB,IAC9I,cAAC,EAAD,CAAcd,KAAK,QAAQU,MAAM,OAAOZ,KAAK,gBAAgBG,GAAI,iBAAmBT,EAAM0B,MAAOnB,UAAU,cAAcQ,cAAc,EAAMV,aAAciB,IAC3J,cAAC,EAAD,CAAcd,KAAK,QAAQU,MAAM,KAAKZ,KAAK,cAAcG,GAAI,eAAiBT,EAAM0B,MAAOnB,UAAU,cAAcQ,cAAc,EAAMV,aAAciB,QCE9IK,MAlBf,SAAkB3B,GAAQ,IAAD,IACrB,EAAmCC,mBAAS,IAA5C,mBAAMC,EAAN,KAAkBC,EAAlB,KAYA,OANAC,qBAAU,WACHJ,EAAMK,cACLL,EAAMK,aAAaL,EAAMM,KAAMJ,KAEpC,CAACA,IAEG,sBAAKK,UAAU,6BAAf,UAA4C,0BAAUE,GAAE,UAAET,EAAMS,UAAR,QAAcT,EAAMM,KAAMI,MAAOR,EAAYS,SAVjF,SAACC,GACxBT,EAAcS,EAAEC,OAAOH,QAUvBJ,KAAMN,EAAMM,KAAMC,UAAWP,EAAMO,UAAWO,UAAU,IACxD,uBAAOP,UAAS,yBAAoBP,EAAMe,cAAgBb,EAAWc,OAAS,yBAA2B,IACrGC,QAAO,UAAEjB,EAAMS,UAAR,QAAcT,EAAMM,KAD/B,SACsCN,EAAMkB,YCOrCU,MArBf,SAA6B5B,GACzB,MAAwCC,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACMC,EAAuB,SAACR,EAAWrB,GACrC4B,GAAgB,SAACE,GAEb,OADAA,EAAcT,GAAarB,EACpB8B,MAMf,OAHA5B,qBAAU,WACNJ,EAAMyB,YAAY,eAAgBI,EAAc,QACjD,CAACA,IAEA,sBAAKtB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAcC,KAAK,OAAOU,MAAM,aAAaZ,KAAK,YAAYC,UAAU,cAAcF,aAAc0B,IACpG,cAAC,EAAD,CAAcvB,KAAK,OAAOU,MAAM,YAAYZ,KAAK,WAAWC,UAAU,cAAcF,aAAc0B,IAClG,cAAC,EAAD,CAAcvB,KAAK,QAAQU,MAAM,QAAQZ,KAAK,QAAQC,UAAU,cAAcF,aAAc0B,IAC5F,cAAC,EAAD,CAAcvB,KAAK,MAAMU,MAAM,eAAeZ,KAAK,cAAcC,UAAU,cAAcF,aAAc0B,IACvG,cAAC,EAAD,CAAUb,MAAM,cAAcZ,KAAK,cAAcC,UAAU,cAAcF,aAAc0B,QCEpFE,MAnBf,SAAqBjC,GACjB,MAAgCC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACMC,EAAmB,SAACb,EAAWrB,GACjCiC,GAAY,SAACD,GAET,OADAA,EAASX,GAAarB,EACfgC,MAMf,OAHA9B,qBAAU,WACNJ,EAAMyB,YAAY,WAAYS,EAAUlC,EAAM0B,SAC/C,CAACQ,IACG,sBAAK3B,UAAU,iBAAf,UACH,cAAC,EAAD,CAAcC,KAAK,OAAOU,MAAM,eAAeZ,KAAK,cAAcG,GAAI,eAAiBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAc+B,IAC1I,cAAC,EAAD,CAAc5B,KAAK,OAAOU,MAAM,mBAAmBZ,KAAK,iBAAiBG,GAAI,kBAAoBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAc+B,IACpJ,cAAC,EAAD,CAAc5B,KAAK,QAAQU,MAAM,OAAOZ,KAAK,WAAWG,GAAI,YAAcT,EAAM0B,MAAOnB,UAAU,cAAcQ,cAAc,EAAMV,aAAc+B,IACjJ,cAAC,EAAD,CAAc5B,KAAK,QAAQU,MAAM,KAAKZ,KAAK,SAASG,GAAI,UAAYT,EAAM0B,MAAOnB,UAAU,cAAcQ,cAAc,EAAMV,aAAc+B,IAC3I,cAAC,EAAD,CAAUlB,MAAM,cAAcZ,KAAK,cAAcG,GAAI,mBAAqBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAc+B,QCEtHC,MApBf,SAAqBrC,GAAQ,IAAD,IACxB,EAAmCC,mBAASD,EAAMsC,QAAQ,IAA1D,mBAAMpC,EAAN,KAAkBC,EAAlB,KAYA,OANAC,qBAAU,WACHJ,EAAMK,cACLL,EAAMK,aAAaL,EAAMM,KAAMJ,KAEpC,CAACA,IAEI,sBAAKK,UAAU,aAAf,UACA,wBAAQD,KAAMN,EAAMM,KAAMC,UAAWP,EAAMO,UAAWE,GAAE,UAAET,EAAMS,UAAR,QAAcT,EAAMM,KAAMK,SAX/D,SAACC,GACxBT,EAAcS,EAAEC,OAAOH,QAUnB,SACKV,EAAMsC,QAAQC,KAAI,SAACC,EAAad,GAAd,OAAwB,wBAAoBhB,MAAO8B,EAA3B,SAAyCA,GAA5Bd,QAE5D,uBAAOnB,UAAU,wCAAwCU,QAAO,UAAEjB,EAAMS,UAAR,QAAcT,EAAMM,KAApF,SAA2FN,EAAMkB,YCdvGuB,EAAgB,CAAC,OAAQ,UAAW,MAAO,WAoBlCC,MAlBf,SAAwB1C,GACpB,MAAsCC,mBAAS,IAA/C,mBAAO0C,EAAP,KAAoBC,EAApB,KACMC,EAAsB,SAACtB,EAAWrB,GACpC0C,GAAe,SAACD,GAEZ,OADAA,EAAYpB,GAAarB,EAClByC,MAMf,OAHAvC,qBAAU,WACNJ,EAAMyB,YAAY,cAAekB,EAAa3C,EAAM0B,SACrD,CAACiB,IACG,sBAAKpC,UAAU,iBAAf,UACH,cAAC,EAAD,CAAcC,KAAK,OAAOU,MAAM,eAAeZ,KAAK,cAAcG,GAAI,eAAiBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAcwC,IAC1I,cAAC,EAAD,CAAa3B,MAAM,eAAeZ,KAAK,cAAcG,GAAI,eAAiBT,EAAM0B,MAAOnB,UAAU,cAC7F+B,QAASG,EAAepC,aAAcwC,IAC1C,cAAC,EAAD,CAAU3B,MAAM,cAAcZ,KAAK,cAAcG,GAAI,sBAAwBT,EAAM0B,MAAOnB,UAAU,cAAcF,aAAcwC,QCuCzHC,MAvDf,YAAqF,IAApEC,EAAmE,EAAnEA,iBAAkBC,EAAiD,EAAjDA,oBAAqBC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,WACnE,EAA0CjD,mBAAS,CAAC,cAAC,EAAD,CAAkBwB,YAAasB,EAA0BrB,MAAO,GAAV,KAA1G,mBAAOyB,EAAP,KAAsBC,EAAtB,KASA,EAAgCnD,mBAAS,CAAC,cAAC,EAAD,CAAawB,YAAasB,EAA0BrB,MAAO,GAAV,KAA3F,mBAAO2B,EAAP,KAAiBC,EAAjB,KASA,EAAsCrD,mBAAS,CAAC,cAAC,EAAD,CAAgBwB,YAAasB,EAA0BrB,MAAO,GAAV,KAApG,mBAAO6B,EAAP,KAAoBC,EAApB,KASA,OAAQ,uBAAMjD,UAAS,kBAAa2C,EAAa,GAAK,QAAUO,SAAUR,EAAlE,UACJ,oBAAI1C,UAAU,iBAAd,2BACA,cAAC,EAAD,CAAqBkB,YAAasB,IAClC,oBAAIxC,UAAU,iBAAd,uBACC4C,EACD,sBAAK5C,UAAU,UAAf,UACI,wBAAQA,UAAU,cAAcmD,QAhCxC,WACIN,EAAiB,GAAD,mBAAKD,GAAL,CAAoB,cAAC,EAAD,CAAkB1B,YAAasB,EAA6CrB,MAAOyB,EAAcnC,QAA3CmC,EAAcnC,YA+BtCR,KAAK,SAAnE,iBACA,wBAAQD,UAAoC,IAAzB4C,EAAcnC,OAAe,OAAS,iBAAkB0C,QA9BnF,WACIV,EAAoB,gBAAiBG,EAAcnC,OAAS,GAC5DoC,EAAiBD,EAAcQ,OAAO,EAAGR,EAAcnC,OAAS,KA4BgDR,KAAK,SAAjH,uBAEJ,oBAAID,UAAU,iBAAd,kBACC8C,EACD,sBAAK9C,UAAU,UAAf,UACI,wBAAQA,UAAU,cAAcmD,QA7BxC,WACIJ,EAAY,GAAD,mBAAKD,GAAL,CAAe,cAAC,EAAD,CAAa5B,YAAasB,EAAwCrB,MAAO2B,EAASrC,QAAjCqC,EAASrC,YA4BvBR,KAAK,SAA9D,iBACA,wBAAQD,UAA+B,IAApB8C,EAASrC,OAAe,OAAS,iBAAkB0C,QA3B9E,WACIV,EAAoB,WAAYK,EAASrC,OAAS,GAClDsC,EAAYD,EAASM,OAAO,EAAGN,EAASrC,OAAS,KAyBqDR,KAAK,SAAvG,uBAEJ,oBAAID,UAAU,iBAAd,sBACCgD,EACD,sBAAKhD,UAAU,UAAf,UACI,wBAAQA,UAAU,cAAcmD,QA1BxC,WACIF,EAAe,GAAD,mBAAKD,GAAL,CAAkB,cAAC,EAAD,CAAgB9B,YAAasB,EAA2CrB,MAAO6B,EAAYvC,QAAvCuC,EAAYvC,YAyBhCR,KAAK,SAAjE,iBACA,wBAAQD,UAAkC,IAAvBgD,EAAYvC,OAAe,OAAS,iBAAkB0C,QAxBjF,WACIV,EAAoB,cAAeO,EAAYvC,OAAS,GACxDwC,EAAeD,EAAYI,OAAO,EAAGJ,EAAYvC,OAAS,KAsBkDR,KAAK,SAA7G,uBAEJ,oBAAID,UAAU,mBACd,qBAAKA,UAAU,iBAAf,SACI,wBAAQA,UAAU,iBAAlB,0BCzDRqD,EAAc,IAAIC,KAChBC,EAAoB,CAAEC,MAAO,QAASC,KAAM,WAElD,SAASC,EAAcC,GACnB,IAAIC,EAAa,IAAIN,KAAKK,GAC1B,OAAGC,EAAWC,aAAeR,EAAYQ,YAAcD,EAAWE,gBAAkBT,EAAYS,cACrF,UAEJF,EAAWG,mBAAmB,UAAWR,GA8DrCS,MA3Df,YAAwG,IAApFnD,EAAmF,EAAnFA,cAAeS,EAAoE,EAApEA,aAAcK,EAAsD,EAAtDA,SAAUS,EAA4C,EAA5CA,YAAa6B,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,cAInF,OAAQD,GAAiB,qCAAE,sBAAKjE,UAAU,uBAAf,UACvB,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKmE,IAAK,2BAA4BC,IAAI,sBAAsBpE,UAAU,wBAE9E,0CACA,4BAAIsB,EAAa+C,iBAErB,sBAAKrE,UAAU,mBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAIA,UAAU,eAAd,UAA8BsB,EAAagD,UAA3C,IAAuDhD,EAAaiD,YACpE,8BAAG,sBAAMvE,UAAU,YAAhB,oBAAqCsB,EAAakD,SACrD,4BAAI7C,EAASA,EAASlB,OAAS,GAAGgE,iBAClC,8BAAG,sBAAMzE,UAAU,YAAhB,oBAAqCsB,EAAaoD,kBAEzD,uBACA,iDAEI/C,EAASK,KAAI,SAAC2C,EAAMxD,GAChB,OAAO,sBAAKnB,UAAU,WAAf,UACC,oBAAIA,UAAU,eAAd,SAA8B2E,EAAKC,cACnC,4BAAID,EAAKF,iBACT,8BAAIf,EAAciB,EAAKE,UAAvB,MAAqCnB,EAAciB,EAAKG,WACxD,4BAAIH,EAAKN,gBAJqBlD,MAQ9C,uBACA,0CAEIiB,EAAYJ,KAAI,SAAC2C,EAAMxD,GACnB,OAAO,sBAAKnB,UAAU,4BAAf,UACC,oBAAIA,UAAU,eAAd,SAA8B2E,EAAKI,cACnC,4BAAIJ,EAAKK,cACT,4BAAIL,EAAKN,gBAHsClD,MAO/D,uBACA,2CAEIN,EAAcmB,KAAI,SAAC2C,EAAMxD,GACrB,OAAO,sBAAKnB,UAAU,WAAf,UACC,oBAAIA,UAAU,eAAd,SAA8B2E,EAAKM,WACnC,4BAAIN,EAAKO,cACT,8BAAIxB,EAAciB,EAAKQ,eAAvB,MAA0CzB,EAAciB,EAAKS,kBAH/BjE,YAStD,qBAAKnB,UAAU,iBAAf,SACI,wBAAQA,UAAU,iBAAiBmD,QAvDZ,WACvBe,GAAeD,IAsDf,wB,MCzBOoB,MArCf,WACI,MAAgC3F,mBAAS,IAAzC,mBAAO4F,EAAP,KAAiBpE,EAAjB,KAkBA,EAAmCxB,oBAAS,GAA5C,mBAAO6F,EAAP,KAAmBC,EAAnB,KAQA,OACI,sBAAKxF,UAAU,MAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,cAAC,EAAD,CAAQwC,iBA5BS,SAACxB,EAAWrB,EAAYwB,GAC7CD,GAAY,SAACuE,GACT,OAAa,MAATtE,GACAsE,EAAUzE,GAAarB,EAChB8F,IAELzE,KAAayE,IACfA,EAAUzE,GAAa,IAE3ByE,EAAUzE,GAAWG,GAASxB,EACvB8F,OAkBqChD,oBAfxB,SAACzB,EAAWG,GACpCD,EAAY,2BAAKoE,GAAN,kBAAiBtE,EAAYsE,EAAStE,GAAW0E,QAAO,SAACC,EAAOC,GAAR,OAAcA,IAAMzE,SAe/EuB,cAVZ,SAAuBrC,GACnBA,EAAEwF,iBACFL,GAAcD,GACdO,SAASC,cAAc,eAAeC,eAAe,CAACC,SAAU,SAAUC,MAAO,SAO3CvD,YAAa4C,IAC/C,cAAC,EAAD,2BAAeD,GAAf,IAAyBrB,cAAesB,EAAYrB,cAAesB,SCjC/EW,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJP,SAASQ,eAAe,W","file":"static/js/main.c822e679.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction InputElement(props) {\r\n    const[fieldValue, setFieldValue] = useState(\"\");\r\n\r\n    const inputChangeHandler = (e) => {\r\n        setFieldValue(e.target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(props.setFieldData) {\r\n            props.setFieldData(props.name, fieldValue);\r\n        }\r\n    }, [fieldValue]);\r\n\r\n    return <div className=\"form-group\"><input type={props.type} id={props.id ?? props.name} value={fieldValue} onChange={inputChangeHandler} \r\n        name={props.name} className={props.className} required={true} />\r\n        <label className={`floating-label ${props.labelFocused || fieldValue.length ? \"floating-label-focused\" : \"\"}`}\r\n            htmlFor={props.id ?? props.name}>{props.label}</label></div>;\r\n}\r\nexport default InputElement;","import { useState, useEffect } from \"react\";\r\nimport InputElement from \"./common/InputElement\";\r\n\r\nfunction EducationSection(props) {\r\n    const [educationInfo, setEducationInfo] = useState({});\r\n    const setEducationalFieldData = (fieldName, fieldValue) => {\r\n        setEducationInfo((pEducationalInfo) => {\r\n            pEducationalInfo[fieldName] = fieldValue;\r\n            return pEducationalInfo;\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        props.setFormData(\"educationInfo\", educationInfo, props.index);\r\n    }, [educationInfo]);\r\n    return <div className=\"info-container\">\r\n        <InputElement type=\"text\" label=\"University or School Name\" name=\"univName\" id={\"univName_\" + props.index} className=\"input-field\" setFieldData={setEducationalFieldData} />\r\n        <InputElement type=\"text\" label=\"Degree or Stream\" name=\"degOrStream\" id={\"degOrStream_\" + props.index} className=\"input-field\" setFieldData={setEducationalFieldData} />\r\n        <InputElement type=\"month\" label=\"From\" name=\"educationFrom\" id={\"educationFrom_\" + props.index} className=\"input-field\" labelFocused={true} setFieldData={setEducationalFieldData} />\r\n        <InputElement type=\"month\" label=\"To\" name=\"educationTo\" id={\"educationTo_\" + props.index} className=\"input-field\" labelFocused={true} setFieldData={setEducationalFieldData} />\r\n    </div>;\r\n}\r\nexport default EducationSection;","import { useState, useEffect } from \"react\";\r\n\r\nfunction TextArea(props) {\r\n    const[fieldValue, setFieldValue] = useState(\"\");\r\n\r\n    const inputChangeHandler = (e) => {\r\n        setFieldValue(e.target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(props.setFieldData) {\r\n            props.setFieldData(props.name, fieldValue);\r\n        }\r\n    }, [fieldValue]);\r\n\r\n    return <div className=\"form-group text-area-group\"><textarea id={props.id ?? props.name} value={fieldValue} onChange={inputChangeHandler} \r\n        name={props.name} className={props.className} required={true}></textarea>\r\n        <label className={`floating-label ${props.labelFocused || fieldValue.length ? \"floating-label-focused\" : \"\"}`}\r\n            htmlFor={props.id ?? props.name}>{props.label}</label></div>;\r\n}\r\nexport default TextArea;","import React, { useEffect, useState } from \"react\";\r\nimport InputElement from \"./common/InputElement\";\r\nimport TextArea from \"./common/TextArea\";\r\n\r\nfunction PersonalInfoSection(props) {\r\n    const [personalInfo, setPersonalInfo] = useState({});\r\n    const setPersonalFieldData = (fieldName, fieldValue) => {\r\n        setPersonalInfo((pPersonalInfo) => {\r\n            pPersonalInfo[fieldName] = fieldValue;\r\n            return pPersonalInfo;\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        props.setFormData(\"personalInfo\", personalInfo, null);\r\n    }, [personalInfo]);\r\n    return (\r\n        <div className=\"info-container\">\r\n            <InputElement type=\"text\" label=\"First Name\" name=\"firstName\" className=\"input-field\" setFieldData={setPersonalFieldData} />\r\n            <InputElement type=\"text\" label=\"Last Name\" name=\"lastName\" className=\"input-field\" setFieldData={setPersonalFieldData} />\r\n            <InputElement type=\"email\" label=\"Email\" name=\"email\" className=\"input-field\" setFieldData={setPersonalFieldData} />\r\n            <InputElement type=\"tel\" label=\"Phone Number\" name=\"phoneNumber\" className=\"input-field\" setFieldData={setPersonalFieldData} />\r\n            <TextArea label=\"Description\" name=\"description\" className=\"input-field\" setFieldData={setPersonalFieldData} />\r\n        </div>\r\n    );\r\n}\r\nexport default PersonalInfoSection;","import { useState, useEffect } from \"react\";\r\nimport InputElement from \"./common/InputElement\";\r\nimport TextArea from \"./common/TextArea\";\r\n\r\nfunction WorkSection(props) {\r\n    const [workInfo, setWorkInfo] = useState({});\r\n    const setWorkFieldData = (fieldName, fieldValue) => {\r\n        setWorkInfo((workInfo) => {\r\n            workInfo[fieldName] = fieldValue;\r\n            return workInfo;\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        props.setFormData(\"workInfo\", workInfo, props.index);\r\n    }, [workInfo]);\r\n    return <div className=\"info-container\">\r\n        <InputElement type=\"text\" label=\"Company Name\" name=\"companyName\" id={\"companyName_\" + props.index} className=\"input-field\" setFieldData={setWorkFieldData} />\r\n        <InputElement type=\"text\" label=\"Role or Position\" name=\"roleOrPosition\" id={\"roleOrPosition_\" + props.index} className=\"input-field\" setFieldData={setWorkFieldData} />\r\n        <InputElement type=\"month\" label=\"From\" name=\"workFrom\" id={\"workFrom_\" + props.index} className=\"input-field\" labelFocused={true} setFieldData={setWorkFieldData} />\r\n        <InputElement type=\"month\" label=\"To\" name=\"workTo\" id={\"workTo_\" + props.index} className=\"input-field\" labelFocused={true} setFieldData={setWorkFieldData} />\r\n        <TextArea label=\"Description\" name=\"description\" id={\"workDescription_\" + props.index} className=\"input-field\" setFieldData={setWorkFieldData} />\r\n    </div>;\r\n}\r\nexport default WorkSection;","import { useState, useEffect } from \"react\";\r\n\r\nfunction SelectInput(props) {\r\n    const[fieldValue, setFieldValue] = useState(props.options[0]);\r\n\r\n    const inputChangeHandler = (e) => {\r\n        setFieldValue(e.target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(props.setFieldData) {\r\n            props.setFieldData(props.name, fieldValue);\r\n        }\r\n    }, [fieldValue]);\r\n\r\n    return (<div className=\"form-group\">\r\n            <select name={props.name} className={props.className} id={props.id ?? props.name} onChange={inputChangeHandler}>\r\n                {props.options.map((optionValue, index) => <option key={index} value={optionValue}>{optionValue}</option>)}\r\n            </select>\r\n            <label className=\"floating-label floating-label-focused\" htmlFor={props.id ?? props.name}>{props.label}</label>\r\n        </div>);\r\n}\r\nexport default SelectInput;","import { useState, useEffect } from \"react\";\r\nimport InputElement from \"./common/InputElement\";\r\nimport SelectInput from \"./common/SelectInput\";\r\nimport TextArea from \"./common/TextArea\";\r\n\r\nconst PROJECT_TYPES = [\"Web3\", \"Android\", \"iOS\", \"Desktop\"];\r\n\r\nfunction ProjectSection(props) {\r\n    const [projectInfo, setprojectInfo] = useState({});\r\n    const setProjectFieldData = (fieldName, fieldValue) => {\r\n        setprojectInfo((projectInfo) => {\r\n            projectInfo[fieldName] = fieldValue;\r\n            return projectInfo;\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        props.setFormData(\"projectInfo\", projectInfo, props.index);\r\n    }, [projectInfo]);\r\n    return <div className=\"info-container\">\r\n        <InputElement type=\"text\" label=\"Project Name\" name=\"ProjectName\" id={\"ProjectName_\" + props.index} className=\"input-field\" setFieldData={setProjectFieldData} />\r\n        <SelectInput label=\"Project Type\" name=\"projectType\" id={\"projectType_\" + props.index} className=\"input-field\" \r\n            options={PROJECT_TYPES} setFieldData={setProjectFieldData} />\r\n        <TextArea label=\"Description\" name=\"description\" id={\"projectDescription_\" + props.index} className=\"input-field\" setFieldData={setProjectFieldData} />\r\n    </div>;\r\n}\r\nexport default ProjectSection;","import { useState } from \"react\";\r\nimport EducationSection from \"./EducationSection\";\r\nimport PersonalInfoSection from \"./PersonalInfoSection\";\r\nimport WorkSection from \"./WorkSection\";\r\nimport ProjectSection from \"./ProjectSection\";\r\n\r\nfunction CVForm({setFormFieldData, removeFormFieldData, submitHandler, showCVForm}) {\r\n    const [eductaionList, setEducationList] = useState([<EducationSection setFormData={setFormFieldData} key={0} index={0} />]);\r\n    function addEducationSection() {\r\n        setEducationList([...eductaionList, <EducationSection setFormData={setFormFieldData} key={eductaionList.length} index={eductaionList.length} />])\r\n    }\r\n    function deleteEducationSection() {\r\n        removeFormFieldData(\"educationInfo\", eductaionList.length - 1);\r\n        setEducationList(eductaionList.splice(0, eductaionList.length - 1));\r\n    }\r\n\r\n    const [workList, setWorkList] = useState([<WorkSection setFormData={setFormFieldData} key={0} index={0} />]);\r\n    function addWorkSection() {\r\n        setWorkList([...workList, <WorkSection setFormData={setFormFieldData} key={workList.length} index={workList.length} />])\r\n    }\r\n    function deleteWorkSection() {\r\n        removeFormFieldData(\"workInfo\", workList.length - 1)\r\n        setWorkList(workList.splice(0, workList.length - 1));\r\n    }\r\n\r\n    const [projectList, setProjectList] = useState([<ProjectSection setFormData={setFormFieldData} key={0} index={0} />]);\r\n    function addProjectSection() {\r\n        setProjectList([...projectList, <ProjectSection setFormData={setFormFieldData} key={projectList.length} index={projectList.length} />])\r\n    }\r\n    function deleteProjectSection() {\r\n        removeFormFieldData(\"projectInfo\", projectList.length - 1)\r\n        setProjectList(projectList.splice(0, projectList.length - 1));\r\n    }\r\n\r\n    return (<form className={`cv-form ${showCVForm ? \"\" : \"hide\"}`} onSubmit={submitHandler}>\r\n        <h2 className=\"section-header\">Personal Info</h2>\r\n        <PersonalInfoSection setFormData={setFormFieldData} />\r\n        <h2 className=\"section-header\">Education</h2>\r\n        {eductaionList}\r\n        <div className=\"btn-grp\">\r\n            <button className=\"add-btn btn\" onClick={addEducationSection} type=\"button\">Add</button>\r\n            <button className={eductaionList.length === 1 ? \"hide\" : \"btn delete-btn\"} onClick={deleteEducationSection} type=\"button\">Delete</button>\r\n        </div>\r\n        <h2 className=\"section-header\">Work</h2>\r\n        {workList}\r\n        <div className=\"btn-grp\">\r\n            <button className=\"add-btn btn\" onClick={addWorkSection} type=\"button\">Add</button>\r\n            <button className={workList.length === 1 ? \"hide\" : \"btn delete-btn\"} onClick={deleteWorkSection} type=\"button\">Delete</button>\r\n        </div>\r\n        <h2 className=\"section-header\">Projects</h2>\r\n        {projectList}\r\n        <div className=\"btn-grp\">\r\n            <button className=\"add-btn btn\" onClick={addProjectSection} type=\"button\">Add</button>\r\n            <button className={projectList.length === 1 ? \"hide\" : \"btn delete-btn\"} onClick={deleteProjectSection} type=\"button\">Delete</button>\r\n        </div>\r\n        <hr className=\"submit-divider\" />\r\n        <div className=\"submit-btn-grp\">\r\n            <button className=\"btn submit-btn\">Submit</button>\r\n        </div>\r\n    </form>);\r\n}\r\nexport default CVForm;","let currentDate = new Date();\r\nconst dateFormatOptions = { month: \"short\", year: \"numeric\"};\r\n\r\nfunction getDateString(dateStr) {\r\n    let parsedDate = new Date(dateStr);\r\n    if(parsedDate.getMonth() === currentDate.getMonth() && parsedDate.getFullYear() === currentDate.getFullYear()) {\r\n        return \"Present\";\r\n    }\r\n    return parsedDate.toLocaleDateString(\"default\", dateFormatOptions);\r\n}\r\n\r\nfunction CVPreview({educationInfo, personalInfo, workInfo, projectInfo, showCVPreview, togglePreview}) {\r\n    const editOnClickHandler = () => {\r\n        togglePreview(!showCVPreview);\r\n    };\r\n    return (showCVPreview && <><div className=\"cv-preview-container\">\r\n        <div className=\"cv-preview-left\">\r\n            <div className=\"image-container\">\r\n                <img src={\"Portrait_Placeholder.png\"} alt=\"Placeholder potrait\" className=\"placeholder-image\" />\r\n            </div>\r\n            <h2>About me</h2>\r\n            <p>{personalInfo.description}</p>\r\n        </div>\r\n        <div className=\"cv-preview-right\">\r\n            <div className=\"info-grp\">\r\n                <h3 className=\"display-name\">{personalInfo.firstName} {personalInfo.lastName}</h3>\r\n                <p><span className=\"font-icon\">✉</span>{personalInfo.email}</p>\r\n                <p>{workInfo[workInfo.length - 1].roleOrPosition}</p>\r\n                <p><span className=\"font-icon\">✆</span>{personalInfo.phoneNumber}</p>\r\n            </div>\r\n            <hr/>\r\n            <h2>Work Experience</h2>\r\n            {\r\n                workInfo.map((info, index) => { \r\n                    return <div className=\"info-grp\" key={index}>\r\n                            <h3 className=\"display-name\">{info.companyName}</h3>\r\n                            <p>{info.roleOrPosition}</p>\r\n                            <p>{getDateString(info.workFrom)} - {getDateString(info.workTo)}</p>\r\n                            <p>{info.description}</p>\r\n                        </div>;\r\n                })\r\n            }\r\n            <hr/>\r\n            <h2>Projects</h2>\r\n            {\r\n                projectInfo.map((info, index) => { \r\n                    return <div className=\"info-grp projects-preview\" key={index}>\r\n                            <h3 className=\"display-name\">{info.ProjectName}</h3>\r\n                            <p>{info.projectType}</p>\r\n                            <p>{info.description}</p>\r\n                        </div>;\r\n                })\r\n            }\r\n            <hr/>\r\n            <h2>Education</h2>\r\n            {\r\n                educationInfo.map((info, index) => { \r\n                    return <div className=\"info-grp\" key={index}>\r\n                            <h3 className=\"display-name\">{info.univName}</h3>\r\n                            <p>{info.degOrStream}</p>\r\n                            <p>{getDateString(info.educationFrom)} - {getDateString(info.educationTo)}</p>\r\n                        </div>;\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n    <div className=\"submit-btn-grp\">\r\n        <button className=\"btn submit-btn\" onClick={editOnClickHandler}>Edit</button>\r\n    </div></>);\r\n}\r\nexport default CVPreview;","import { useState } from \"react\";\nimport CVForm from \"./components/CVForm\";\nimport CVPreview from \"./components/CVPreview\";\nimport './styles/App.css'\n\nfunction App() {\n    const [formData, setFormData] = useState({});\n    const setFormFieldData = (fieldName, fieldValue, index) => {\n        setFormData((pFormData) => {\n            if (index == null) {\n                pFormData[fieldName] = fieldValue;\n                return pFormData;\n            }\n            if (!(fieldName in pFormData)) {\n                pFormData[fieldName] = [];\n            }\n            pFormData[fieldName][index] = fieldValue;\n            return pFormData;\n        });\n    };\n    const removeFormFieldData = (fieldName, index) => {\n        setFormData({ ...formData, [fieldName]: formData[fieldName].filter((_data, i) => i !== index) });\n    }\n\n    const [hideCVForm, toggleCVForm] = useState(false);\n\n    function submitHandler(e) {\n        e.preventDefault();\n        toggleCVForm(!hideCVForm);\n        document.querySelector(\".app-header\").scrollIntoView({behavior: \"smooth\", block: \"end\"});\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"app-header\">CV App</h1>\n            <CVForm setFormFieldData={setFormFieldData} removeFormFieldData={removeFormFieldData} \n                submitHandler={submitHandler} showCVForm={!hideCVForm} />\n            <CVPreview {...formData} showCVPreview={hideCVForm} togglePreview={toggleCVForm} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}